[0/2] Re-checking globbed directories...
[1/13] Performing build step for 'bootloader'
[1/1] cd /home/micu/esp/mycode/micu_ros_car/build/bootloader/esp-idf/esptool_py && /home/micu/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/micu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/micu/esp/mycode/micu_ros_car/build/bootloader/bootloader.bin
Bootloader binary size 0x51b0 bytes. 0x2e50 bytes (36%) free.
[2/11] Building C object esp-idf/lidar/CMakeFiles/__idf_lidar.dir/lidar.c.obj
[3/11] Building C object esp-idf/UART/CMakeFiles/__idf_UART.dir/UART.c.obj
[4/11] Linking C static library esp-idf/UART/libUART.a
[5/11] Linking C static library esp-idf/lidar/liblidar.a
[6/11] Building C object esp-idf/config/CMakeFiles/__idf_config.dir/config.c.obj
[7/11] Linking C static library esp-idf/config/libconfig.a
[8/11] Generating ld/sections.ld
[9/11] Linking CXX executable micu_ros_car.elf
[10/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/micu/esp/mycode/micu_ros_car/build/micu_ros_car.bin
[11/11] cd /home/micu/esp/mycode/micu_ros_car/build/esp-idf/esptool_py && /home/micu/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/micu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/micu/esp/mycode/micu_ros_car/build/partition_table/partition-table.bin /home/micu/esp/mycode/micu_ros_car/build/micu_ros_car.bin
micu_ros_car.bin binary size 0xc10b0 bytes. Smallest app partition is 0x177000 bytes. 0xb5f50 bytes (49%) free.
